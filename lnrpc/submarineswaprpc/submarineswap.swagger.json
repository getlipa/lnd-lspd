{
  "swagger": "2.0",
  "info": {
    "title": "submarineswaprpc/submarineswap.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "SubmarineSwapper"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/submarineswapper/clientinit": {
      "post": {
        "operationId": "SubmarineSwapper_SubSwapClientInit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapClientInitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapClientInitRequest"
            }
          }
        ],
        "tags": [
          "SubmarineSwapper"
        ]
      }
    },
    "/v2/submarineswapper/clientwatch": {
      "post": {
        "summary": "*",
        "operationId": "SubmarineSwapper_SubSwapClientWatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapClientWatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapClientWatchRequest"
            }
          }
        ],
        "tags": [
          "SubmarineSwapper"
        ]
      }
    },
    "/v2/submarineswapper/redeem": {
      "post": {
        "summary": "*\nSubSwapServiceRedeem redeems the amount received to a new address of the\ninternal wallet.",
        "operationId": "SubmarineSwapper_SubSwapServiceRedeem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapServiceRedeemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapServiceRedeemRequest"
            }
          }
        ],
        "tags": [
          "SubmarineSwapper"
        ]
      }
    },
    "/v2/submarineswapper/redeemfees": {
      "post": {
        "summary": "*\nSubSwapServiceFeesRedeem returns the fees to redeem the amount received.",
        "operationId": "SubmarineSwapper_SubSwapServiceRedeemFees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapServiceRedeemFeesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapServiceRedeemFeesRequest"
            }
          }
        ],
        "tags": [
          "SubmarineSwapper"
        ]
      }
    },
    "/v2/submarineswapper/refund": {
      "post": {
        "summary": "*\nSubSwapClientRefund refunds the amount received to a an external address.",
        "operationId": "SubmarineSwapper_SubSwapClientRefund",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapClientRefundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapClientRefundRequest"
            }
          }
        ],
        "tags": [
          "SubmarineSwapper"
        ]
      }
    },
    "/v2/submarineswapper/serviceinit": {
      "post": {
        "summary": "*",
        "operationId": "SubmarineSwapper_SubSwapServiceInit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapServiceInitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/submarineswaprpcSubSwapServiceInitRequest"
            }
          }
        ],
        "tags": [
          "SubmarineSwapper"
        ]
      }
    },
    "/v2/submarineswapper/unspentamount": {
      "post": {
        "summary": "*\nUnspentAmount returns the total amount of the btc received in a watched\naddress, the block height and the age of the first transaction sending btc\nto the address.",
        "operationId": "SubmarineSwapper_UnspentAmount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/submarineswaprpcUnspentAmountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/submarineswaprpcUnspentAmountRequest"
            }
          }
        ],
        "tags": [
          "SubmarineSwapper"
        ]
      }
    }
  },
  "definitions": {
    "UnspentAmountResponseUtxo": {
      "type": "object",
      "properties": {
        "block_height": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "txid": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "submarineswaprpcSubSwapClientInitRequest": {
      "type": "object"
    },
    "submarineswaprpcSubSwapClientInitResponse": {
      "type": "object",
      "properties": {
        "preimage": {
          "type": "string",
          "format": "byte"
        },
        "hash": {
          "type": "string",
          "format": "byte"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "pubkey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "submarineswaprpcSubSwapClientRefundRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "/ The address used for the swap."
        },
        "refundAddress": {
          "type": "string",
          "description": "/ The address to receive the refund."
        },
        "target_conf": {
          "type": "integer",
          "format": "int32",
          "description": "/ The target number of blocks that the funding transaction should be\n/ confirmed by."
        },
        "sat_per_byte": {
          "type": "string",
          "format": "int64",
          "description": "/ A manual fee rate set in sat/byte that should be used when crafting the\n/ funding transaction."
        }
      }
    },
    "submarineswaprpcSubSwapClientRefundResponse": {
      "type": "object",
      "properties": {
        "tx": {
          "type": "string",
          "format": "byte",
          "description": "/ The txid of the transaction."
        },
        "fees": {
          "type": "string",
          "format": "int64",
          "title": "the fees for the refund transaction in sats"
        }
      }
    },
    "submarineswaprpcSubSwapClientWatchRequest": {
      "type": "object",
      "properties": {
        "preimage": {
          "type": "string",
          "format": "byte"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "service_pubkey": {
          "type": "string",
          "format": "byte"
        },
        "lock_height": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "submarineswaprpcSubSwapClientWatchResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "script": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "submarineswaprpcSubSwapServiceInitRequest": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte"
        },
        "pubkey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "submarineswaprpcSubSwapServiceInitResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "pubkey": {
          "type": "string",
          "format": "byte"
        },
        "lock_height": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "submarineswaprpcSubSwapServiceRedeemFeesRequest": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte",
          "title": "/ The hash (to be used by a swapper service)"
        },
        "target_conf": {
          "type": "integer",
          "format": "int32",
          "description": "/ The target number of blocks that the funding transaction should be\n/ confirmed by."
        },
        "sat_per_byte": {
          "type": "string",
          "format": "int64",
          "description": "/ A manual fee rate set in sat/byte that should be used when crafting the\n/ funding transaction."
        }
      }
    },
    "submarineswaprpcSubSwapServiceRedeemFeesResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "submarineswaprpcSubSwapServiceRedeemRequest": {
      "type": "object",
      "properties": {
        "preimage": {
          "type": "string",
          "format": "byte"
        },
        "target_conf": {
          "type": "integer",
          "format": "int32",
          "description": "/ The target number of blocks that the funding transaction should be\n/ confirmed by."
        },
        "sat_per_byte": {
          "type": "string",
          "format": "int64",
          "description": "/ A manual fee rate set in sat/byte that should be used when crafting the\n/ funding transaction."
        }
      }
    },
    "submarineswaprpcSubSwapServiceRedeemResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string",
          "description": "/ The txid of the transaction."
        }
      }
    },
    "submarineswaprpcUnspentAmountRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "/ The address (to be used by a client using swap service)"
        },
        "hash": {
          "type": "string",
          "format": "byte",
          "title": "/ The hash (to be used by a swapper service)"
        }
      }
    },
    "submarineswaprpcUnspentAmountResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "/ The total amount"
        },
        "lock_height": {
          "type": "integer",
          "format": "int32"
        },
        "utxos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnspentAmountResponseUtxo"
          }
        }
      }
    }
  }
}
